/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v0.2.0-alpha.60
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct OAuth2ConsentSession {
    #[serde(rename = "allowed_top_level_claims", skip_serializing_if = "Option::is_none")]
    pub allowed_top_level_claims: Option<Vec<String>>,
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    #[serde(rename = "consent_challenge", skip_serializing_if = "Option::is_none")]
    pub consent_challenge: Option<String>,
    #[serde(rename = "exclude_not_before_claim", skip_serializing_if = "Option::is_none")]
    pub exclude_not_before_claim: Option<bool>,
    #[serde(rename = "expires_at", skip_serializing_if = "Option::is_none")]
    pub expires_at: Option<Box<crate::models::OAuth2ConsentSessionExpiresAt>>,
    #[serde(rename = "extra", skip_serializing_if = "Option::is_none")]
    pub extra: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "headers", skip_serializing_if = "Option::is_none")]
    pub headers: Option<Box<crate::models::Headers>>,
    #[serde(rename = "id_token_claims", skip_serializing_if = "Option::is_none")]
    pub id_token_claims: Option<Box<crate::models::IdTokenClaims>>,
    #[serde(rename = "kid", skip_serializing_if = "Option::is_none")]
    pub kid: Option<String>,
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<String>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
}

impl Default for OAuth2ConsentSession {
    fn default() -> Self {
        Self::new()
    }
}

impl OAuth2ConsentSession {
    pub fn new() -> OAuth2ConsentSession {
        OAuth2ConsentSession {
                allowed_top_level_claims: None,
                client_id: None,
                consent_challenge: None,
                exclude_not_before_claim: None,
                expires_at: None,
                extra: None,
                headers: None,
                id_token_claims: None,
                kid: None,
                subject: None,
                username: None,
        }
    }
}


